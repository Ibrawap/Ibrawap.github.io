<?php
/*
* This Live Controller File Was automatically 
* Generated by Path
* Modify to Suite your needs,
* */

namespace Path\Controller\Live;


use Path\Storage\Caches;
use Path\Http\Response;
use Path\Http\Watcher;
use Path\LiveController;
use Path\Database\Models\TestM;
use Path\Storage\Sessions;

class MyController implements LiveController
{
    // this array of methods that can be watched
    // the array key here can either represent a method of dynamic data being set in constructor
     
    public $isLogged = "initial value";//Change 'initial value' in constructor of this class' 
    public $messageStream = "initial value";//Change 'initial value' in constructor of this class'    
    //every time the watcher checks this Live Controller, it passes some data to it 
    public function __construct(
        Sessions $sessions,//the session instance that can be used for auth. with the client side
        $params,//the params parsed from Javascript Path-Watcher
        $message//message sent from User(client Side)
    )
    {
      
        /*
        *  
        * you should set the value of each key(which represents methods in this class)
        * to something that changes based on the return value
        * of the method they represents
        *
         */
 
        $this->isLogged =  "a dynamic value"; 
        $this->messageStream =  "a dynamic value";
    }
 
public function isLogged(Response $response,?String $message,Sessions $sessions){
//response here will be sent to client side when $this->watch_list["isLogged"]'s value changes
        return $response->json(['message_sent' => "hello"]);
}
         
public function messageStream(Response $response,?String $message,Sessions $sessions){
//response here will be sent to client side when $this->watch_list["messageStream"]'s value changes
        return $response->json(['message_sent' => "hello"]);
}
                

}
        